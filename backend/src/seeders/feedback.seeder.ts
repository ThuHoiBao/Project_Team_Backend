import mongoose from "mongoose";
import {OrderItem} from "../models/OrderItem";
import {Feedback} from "../models/Feedback";
import Product from "../models/Product"; 

const comments = [
  "S·∫£n ph·∫©m r·∫•t t·ªët, ch·∫•t l∆∞·ª£ng v∆∞·ª£t mong ƒë·ª£i!",
  "ƒê√≥ng g√≥i c·∫©n th·∫≠n, giao h√†ng nhanh.",
  "H√†ng ·ªïn trong t·∫ßm gi√°, s·∫Ω mua l·∫°i.",
  "M√†u s·∫Øc kh√¥ng gi·ªëng h√¨nh l·∫Øm nh∆∞ng v·∫´n ch·∫•p nh·∫≠n ƒë∆∞·ª£c.",
  "Ch·∫•t li·ªáu h∆°i m·ªèng, mong shop c·∫£i thi·ªán.",
  "Size v·ª´a v·∫∑n, m·∫∑c tho·∫£i m√°i.",
  "Gi√° h·ª£p l√Ω, ch·∫•t l∆∞·ª£ng t·ªët.",
  "Nh√¢n vi√™n giao h√†ng th√¢n thi·ªán.",
  "H√†i l√≤ng v·ªõi d·ªãch v·ª• chƒÉm s√≥c kh√°ch h√†ng.",
  "S·∫Ω gi·ªõi thi·ªáu cho b·∫°n b√®.",
];

async function seedFeedback() {
  try {
    await mongoose.connect("mongodb://127.0.0.1:27017/DB_02");
    console.log("‚úÖ Connected to MongoDB");

    const orderItems = await OrderItem.find({});
    console.log(`üîç T√¨m th·∫•y ${orderItems.length} order items`);

    for (const item of orderItems) {
      // N·∫øu ƒë√£ c√≥ feedback th√¨ b·ªè qua
      if (item.feedback) continue;

      const randomComment =
        comments[Math.floor(Math.random() * comments.length)];
      const randomRating = Math.floor(Math.random() * 5) + 1; // 1‚Äì5

      // T·∫°o feedback m·ªõi
      const feedback = await Feedback.create({
        OrderItem: item._id,
        rating: randomRating,
        comment: randomComment,
      });

      // G·∫Øn feedback v√†o OrderItem
      item.feedback = feedback._id as mongoose.Types.ObjectId;
      await item.save();
    }

    console.log("üéâ Feedback seeding completed.");
    await mongoose.disconnect();
  } catch (error) {
    console.error("‚ùå Error seeding feedback:", error);
    await mongoose.disconnect();
  }
}

seedFeedback();
